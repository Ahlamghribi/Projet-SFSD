#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
typedef struct date
{
    int anne;
    int mois;
    int jour;

}date;
typedef struct entete
{
 int nbbloc;//nobre de bloc total
 int nbenreg;//nb de enregistrement total
}entete;


typedef struct medicamment{
   int reference; // le champ utilisé comme clé de recherche et pour ordonner le fichier
   float prix;
   date expiration;
   date fabrication;
   char ingredient[50];// le champ utiliser pour la taille variable
   int quantite;
}medicamment;


typedef struct bloc
{
   char buff[500];
   int nbe ; //nobre d'enregistement dans le bloc (dans la case 0 de le bloc
}bloc;

void entet (FILE *F,int i,entete e)
 {
    if(i==1)
    {
        return e.nbbloc;
    }
    if(i==2)
    {
        return e.nbenreg;
    }
 }

 void ref (int tab[4])
 {
     int s=0;
   for (int i=0;i<=3;i++)
   {
       s=s*10+tab[i];
   }
   return s;
 }
void tochar(char ch[500], Medicament med)
{
    int i = 0;

    for (int j = 0; j < sizeof(med.nom); j++)
    {
        ch[i] = med.nom[j];
        i++;
    }
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d", med.qte);
    i =i+ snprintf(NULL, 0, "%d", med.qte);

    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d", med.reference);
    i += snprintf(NULL, 0, "%d", med.reference);
    ch[i] = '$';
    i++;
    sprintf(&ch[i], "%f", med.prix);
    i += snprintf(NULL, 0, "%f", med.prix);
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d %d %d", med.datefabr.jour, med.datefabr.mois, med.datefabr.annee);
    i += snprintf(NULL, 0, "%d %d %d", med.datefabr.jour, med.datefabr.mois, med.datefabr.annee);
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d %d %d", med.dateexp.jour, med.dateexp.mois, med.dateexp.annee);
    i += snprintf(NULL, 0, "%d %d %d", med.dateexp.jour, med.dateexp.mois, med.dateexp.annee);
    ch[i] = '$';
    i++;

    ch[i] = '#';
}


int  taillenrg(Bloc buf, int j) {
    int cmp = 1;

    while (buf.tab[j] != '#') {
        j++;
        cmp++;
    }

    return cmp;
}
int taillebloc(Bloc buf) {
    int j = 1;

    for (int i = 0; i < buf.nb; i++) {
        j = j + taillenrg(buf, j);
        j++;
    }
int cmp;
int k;
int t;
int y;
bool trouve ;
 char x[500];
void insertion (FILE *F,medicament eng ,entete e,i,j){
recherche (eng.ref,FILE *F,entete e,i,j,trouve); 
if (!trouve){ 
   F = fopen("sfsd.txt","rb+");
   char ch[500]=tochar(char ch[500], Medicament eng);
  if(i=1)&&(j=1){
      buffer.buff[1]=ch;
      continu=false;
  }
  else{
      if(500-taillebloc())=>taillenrg(i) 
     {
          int prd =j;
while( j=='#'){
j=j+1;}
t=j+1;
int taille= taillenrg(i) 
while(t>j)  { 
buffer.buff[t+taille ]=buffer.buff[t];
while(t!="#"){
    t=t-1;}
    if(t="#"){
        t=t+1;
    }}
ch=tochar(char ch[500], Medicament eng);
buffer.buff[j+1]=ch;
continu=false;
      }
      else{
           bool continu= true ;
    while (continu && i <= e.nbbloc { /* i cest le bloc ou on va inserer eng par la fonction rech */
 fseek(f, i * sizeof(Bloc), SEEK_SET);confirmer
 fread(buffer, sizeof(i), nbe, F); /* on copie  tous les engs de ce bloc dans buffer  hna nktb buufer.bufff*/
x=buffer.buff[buffer.nbe];
while(t>j)  { 
buffer.buff[t+taille ]=buffer.buff[t];
while(t!="#"){
    t=t-1;}
    if(t="#"){
        t=t+1; }}
ch=tochar(char ch[500], Medicament eng);
buffer.buff[j+1]=ch;   
    }

  i=i+1; 
 
 while(i<=e.nbbloc{
  if(+taillebloc()>=500){
      i=i+1;}
  else{
while(k>1)    {
buffer.buff[k+ la taille (x) ]=buffer.buff[k];
while(k!="#"){
    k=k-1;}
    if(k="#"){
        k=k+1; }}
}
buffer.buff[1]=x;
 continu=false;} }
           }
  }
