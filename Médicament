#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
//structure de l'nregistremment date
typedef struct date
{
    int anne;
    int mois;
    int jour;

}date;
typedef struct entete
{
 int nbbloc;//nobre de bloc total
 int nbenreg;//nb de enregistrement total
}entete;

//structure de l'eregistrement medicamment
typedef struct medicamment{
   int reference; // le champ utilisé comme clé de recherche et pour ordonner le fichier
   float prix;
   date expiration;
   date fabrication;
   char ingredient[50];// le champ utiliser pour la taille variable
   int quantite;
}medicamment;

// la structure de block


typedef struct bloc
{
   char buff[500];
   int nbe ; //nobre d'enregistement dans le bloc (dans la case 0 de le bloc
}bloc;

void entet (FILE *F,int i,entete e)
 {
    if(i==1)
    {
        return e.nbbloc;
    }
    if(i==2)
    {
        return e.nbenreg;
    }
 }

 void ref (int tab[4])
 {
     int s=0;
   for (int i=0;i<=3;i++)
   {
       s=s*10+tab[i];
   }
   return s;
 }
int cmp;
int k;
int t;
int y;
bool trouve ;
 char x[500];
void insertion (FILE *F,medicamment eng ){
 int cle =ref(eng.reference) ; /*ouissal wch ndkhl argumnt hna*/
recherche (cle,FILE *F,entete e); /*erreur tabe3 lcle mm hna nsksi ouissal*/
if (!trouve){ /* cet enregistrement n existe pas */
   F = fopen("sfsd.txt","rb+");
   bool continu= true ;
    while (continu && i <= entet(F, 1)) { /* i cest le bloc ou on va inserer eng par la fonction rech */
LireDir(F, int i,buffer); /* on copie  tous les engs de ce bloc dans buffer  hna nktb buufer.bufff*/
x=buffer.buff[buffer.nbe]; /* on copie dernier eng dans une varioable temp*/
j=dernier caractere prd ;
cmp=1;
while( cmp<buffer.nbe-1)
        {
            if (buffer.buff[k]=='#')
            {
                cmp=cmp+1;
            }
            t=t+1;}
while(t>j)  { /* t = position dernier car dans dernier eng > j positionc car dernier prd */
buffer.buff[t+ la taille deng jdid]=buffer.buff[t];
t=t-1;}
buffer.buff[j+1]=eng;
cmp=1;
y=1;
bool cbn =true ;
  while( cmp<buffer.nbe)
        {
            if (buffer.buff[y]=='#')
            {
                cmp=cmp+1;
            }
            k=k+1;}
 if(k+taille(x)<500){ /* k la taille totale de bloc i*/
     k=k+taille(x);
     buffer.buff[k]=x;
       continu=false;}
  else{
  i=i+1; /* we gonna move to block li godamo */
  y=1;
 while(i<=entet(F,1)){
    while( cmp<buffer.nbe)
        {
            if (buffer.buff[ y]=='#')
            {
                cmp=cmp+1;
            }
            k=k+1; /* k la taille de bloc i+1 */
          }
  if(k+taille(x)>=500){
      i=i+1;}
  else{
k=1;
while(k>1)    {
buffer.buff[k+ la taille (x) ]=buffer.buff[k];
k=k-1;}
buffer.buff[1]=eng;
 continu=false;} }

} } } }


