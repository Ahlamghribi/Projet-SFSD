#include <stdio.h>
#include <stdbool.h>
#include <string.h>

typedef struct {
    int jour, mois, annee;
} date;

typedef struct {
    char nom[20];
    int qte;
    float prix;
    int reference;
    char ingredient[30];
    struct date datefabr, dateexp;

} Medicament;

typedef struct {
    char tab[500];
    int nb;
} Bloc;

typedef struct {
    int nbrenrg, nbbloc;
} entete;


int taillenrg(Bloc buf, int j) {
    int cmp = 1;

    while (buf.tab[j] != '#') {
        j++;
        cmp++;
    }

    return cmp;
}

int taillebloc(Bloc buf) {
    int j = 1;

    for (int i = 0; i < buf.nb; i++) {
        j = j + taillenrg(buf, j);
        j++;
    }

    return j;
}
 
void Suppression(int reference, FILE* fichier) {
    FILE *f;
    bool trouv;
    struct entete t;
    int i, j;
    Bloc buf;

    f = fopen(nomfich, "rb+");

    Rech(reference, nomfich, trouv, i, j);
    int cmp = taillenrg(buf.tab,j);  
    if (trouv) {
        fseek(f, i * sizeof(Bloc), SEEK_SET);
        fread(&buf, sizeof(Bloc), 1, f);

        while (!feof(fichier)) {
                
            if (taillebloc(buf) +taillenrg(buf.tab,j+cmp+1)-taillenrg(buf.tab,j) <= 500) { //est ce que n9dro ndiro enregistrement jdid f placeto wyekfina place 
                while (buf.tab[cmp] != '#') {
                    buf.tab[j] = buf.tab[cmp];
                    j++; cmp++;
                } 
                j=j+cmp;
            } else {
                while (buf.tab[j+cmp] != '#') {
                    buf.tab[j] = '*';
                    j++; 
                }
            }

            buf.tab[j+1] = '#';
        }

        fseek(f, i * sizeof(Bloc), SEEK_SET);
        fwrite(&buf, sizeof(Bloc), 1, f);

        buf.nb--;
    }

    fclose(f);
}

// suppression en utilisant l'index


typedef struct {
 
int reference ,cas,bloc;

}index;

//recherche retourner le i : num de enregistrement
void Suppression(int reference, FILE* fichier,index index[1000],entete e) {
    FILE *f; int i;//num de bloc 
    Bloc buf;
    f = fopen(nomfich, "rb+");
    int r=rechercheIndex (int reference,index[1000],entete e); // numero enregistrement
    int j=index[r].cas;
    int i=index[r].bloc;
    
    fseek(f,i* sizeof(Bloc), SEEK_SET);
    fread(&buf, sizeof(Bloc), 1, f); // averifier 
    int cmp = taillenrg(buf.tab,j); 
    bool decalage=true;
        while (!feof(fichier)) 
        { 
            if (taillebloc(buf) +taillenrg(buf.tab,j+cmp+1)-taillenrg(buf.tab,j)> 500) { //est ce que n9dro ndiro enregistrement jdid f placeto wyekfina place 
                nospace=true;
                fseek(f,i* sizeof(Bloc), SEEK_SET);
                fread(&buf, sizeof(Bloc), 1, f); 
                
                int o=j+cmp;
                while (j<=500) {
                    buf.tab[j] = '*';
                    j++; 
                }
                j++;
               
                if (j!=o)
                {
                
                        while(buf.tab[j+cmp]!='#')
                    {
                        tab[j]=tab[o];
                    j++;
                    }
                    j++;
                    buf.tab[j]='#';
                }
                 
            }
            
    else
        {
                nospace=false;
                while (buf.tab[j+cmp] != '#') {
                    buf.tab[j] = buf.tab[j+cmp];
                    j++; 
                }
                // decalage de l'index 
                
                for (int l=r;l<e.nbrenrg;l++)
                {
                    if (nospace==true)
                    {
                        index[l].bloc=index[l+1].bloc;
                        index[l].cas=index[l+1].cas;
                       
                    }
                    else 
                    {
                        index[l].bloc--;
                        index[l].cas=j;
                    }
                }
                 
                e.nbrenrg--;
                
                j=j+cmp;
    
                i++;
                fseek(f,i* sizeof(Bloc), SEEK_SET);
                fread(&buf, sizeof(Bloc), 1, f);
                
                
                
                
            }  
            
            }
           
           buf.tab[j+1] = '#';
        }

        fseek(f, i * sizeof(Bloc), SEEK_SET);
        fwrite(&buf, sizeof(Bloc), 1, f);

       
    }

    fclose(f);
}



void afficher(int j, Medicament med)
{
    while (buf.tab[j] != '#')
    {
        while (buf.tab[j] != '$')
        {
            printf("Le nom de medicaments : ");
            for (int i = 0; i < sizeof(med.nom); i++)
                printf("%c", med.nom[i]);
            printf("\n");
            j++;
        }

        while (buf.tab[j] != '$')
        {
            printf("La quantite de medicaments : ");
            for (int i = 0; i < sizeof(med.qte); i++)
                printf("%c", med.qte[i]);
            printf("\n");
            j++;
        }

        while (buf.tab[j] != '$')
        {
            printf("Le prix de medicaments : ");
            for (int i = 0; i < sizeof(med.prix); i++)
                printf("%c", med.prix[i]);
            printf("\n");
            j++;
        }

        while (buf.tab[j] != '$')
        {
            printf("La date de fabrication (jour mois annee) : ");
            for (int i = 0; i < sizeof(med.datefabr); i++)
             buf.tab[j] = '#';
             printf("%c", med.datefabr[i]);
            printf("\n");
            j++;
        }

        while (buf.tab[j] != '$')
        {
            printf("La date de l'expiration (jour mois annee) : ");
            for (int i = 0; i < sizeof(med.dateexp); i++)
                printf("%c", med.dateexp[i]);
            printf("\n");
            j++;
        }
    }
}

void tochar(char ch[500], Medicament med)
{
    int i = 0;

    for (int j = 0; j < sizeof(med.nom); j++)
    {
        ch[i] = med.nom[j];
        i++;
    }
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d", med.qte);
    i =i+ snprintf(NULL, 0, "%d", med.qte);

    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d", med.reference);
    i += snprintf(NULL, 0, "%d", med.reference);
    ch[i] = '$';
    i++;
    sprintf(&ch[i], "%f", med.prix);
    i += snprintf(NULL, 0, "%f", med.prix);
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d %d %d", med.datefabr.jour, med.datefabr.mois, med.datefabr.annee);
    i += snprintf(NULL, 0, "%d %d %d", med.datefabr.jour, med.datefabr.mois, med.datefabr.annee);
    ch[i] = '$';
    i++;

    sprintf(&ch[i], "%d %d %d", med.dateexp.jour, med.dateexp.mois, med.dateexp.annee);
    i += snprintf(NULL, 0, "%d %d %d", med.dateexp.jour, med.dateexp.mois, med.dateexp.annee);
    ch[i] = '$';
    i++;

    ch[i] = '#';
}
